// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id            String   @id @default(cuid())
  phone         String   @unique
  name          String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  givenLikes    Like[]   @relation("FromUser")
  receivedLikes Like[]   @relation("ToUser")
  friends       Friend[] @relation("UserFriends")
}

model Like {
  id        String    @id @default(cuid())
  fromUser  User      @relation("FromUser", fields: [fromId], references: [id])
  fromId    String
  toUser    User      @relation("ToUser", fields: [toId], references: [id])
  toId      String
  createdAt DateTime  @default(now())
  deletedAt DateTime?

  @@unique([fromId, toId, createdAt])
}

model Friend {
  id        String   @id @default(cuid())
  name      String
  phone     String
  isLiked   Boolean  @default(false)
  isInvited Boolean  @default(false)
  user      User     @relation("UserFriends", fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, phone], name: "userId_phone")
}
